!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADD	masm.h	13;"	d
ADDI	masm.h	14;"	d
AND	masm.h	20;"	d
ANDI	masm.h	24;"	d
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -std=gnu99 -g$/;"	m
DIV	masm.h	17;"	d
EQUAL	masm.h	43;"	d
EXECS	Makefile	/^EXECS = masm$/;"	m
GREAT	masm.h	34;"	d
GREATE	masm.h	36;"	d
GREATEU	masm.h	41;"	d
GREATU	masm.h	39;"	d
INIT_LIST_HEAD	list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
JMP	masm.h	45;"	d
LDFLAGS	Makefile	/^LDFLAGS = -lpthread -lncurses$/;"	m
LESS	masm.h	33;"	d
LESSE	masm.h	35;"	d
LESSEU	masm.h	40;"	d
LESSU	masm.h	38;"	d
LUI	masm.h	50;"	d
LWORD	masm.h	48;"	d
L_HASH_H	hash.h	9;"	d
MOD	masm.h	18;"	d
MOV	masm.h	47;"	d
MUL	masm.h	16;"	d
NOT	masm.h	22;"	d
OBJS	Makefile	/^OBJS = hash.o $/;"	m
OR	masm.h	21;"	d
ORI	masm.h	25;"	d
SAL	masm.h	30;"	d
SAR	masm.h	31;"	d
SLL	masm.h	28;"	d
SLR	masm.h	29;"	d
SUB	masm.h	15;"	d
SWORD	masm.h	49;"	d
UEQUAL	masm.h	44;"	d
XOR	masm.h	23;"	d
XORI	masm.h	26;"	d
_INCLUDES_H	includes.h	9;"	d
__LIST_H_	list.h	10;"	d
__MASM_H	masm.h	9;"	d
__list_add	list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_del	list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
blist	list.h	/^struct blist$/;"	s
bucket	hash.h	/^typedef struct bucket { $/;"	s
bucket_t	hash.h	/^} bucket_t; $/;"	t	typeref:struct:bucket
buckets	hash.h	/^        bucket_t *buckets;$/;"	m	struct:hash_table
compare_label	hash.c	/^static inline int compare_label(label_t * item , label_t * label)$/;"	f	file:
count	hash.h	/^    uint32_t count;$/;"	m	struct:bucket
exit_if_ptr_is_null	hash.c	/^static void exit_if_ptr_is_null(void * ptr,const char * message) $/;"	f	file:
find_list	hash.c	/^struct blist * find_list(struct list_head * head, label_t * label)$/;"	f
get_first_token	masm.c	/^static inline char * get_first_token(const char * p)$/;"	f	file:
get_opcode_token	masm.c	/^static inline char * get_opcode_token(const char * p)$/;"	f	file:
get_reg_token	masm.c	/^static inline char * get_reg_token(const char * p)$/;"	f	file:
halt	add.s	/^halt:   jmp halt$/;"	l
hash_add_item	hash.c	/^int  hash_add_item(hash_table ** htp, uint32_t key, label_t * label )$/;"	f
hash_count	hash.c	/^uint32_t hash_count(hash_table * ht)$/;"	f
hash_create	hash.c	/^hash_table * hash_create(int num)$/;"	f
hash_item_t	hash.c	/^typedef label_t hash_item_t ;$/;"	t	file:
hash_lookup_item	hash.c	/^void * hash_lookup_item(hash_table * ht, uint32_t key, void * value)$/;"	f
hash_table	hash.h	/^typedef struct hash_table {$/;"	s
hash_table	hash.h	/^} hash_table;$/;"	t	typeref:struct:hash_table
hash_travel_delete	hash.c	/^void  hash_travel_delete(hash_table * ht)$/;"	f
hello	add.s	/^hello$/;"	l
item	list.h	/^	label_t * item;$/;"	m	struct:blist
label_t	list.h	/^}label_t;$/;"	t	typeref:struct:__anon1
line	list.h	/^    int    line;$/;"	m	struct:__anon1
line_has_label	masm.c	/^static inline int line_has_label(const char * p)$/;"	f	file:
list	hash.h	/^    struct list_head list;$/;"	m	struct:bucket	typeref:struct:bucket::list_head
list_add	list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_del	list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_empty	list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_entry	list.h	81;"	d
list_for_each	list.h	84;"	d
list_for_each_safe	list.h	88;"	d
list_head	list.h	/^struct list_head {$/;"	s
list_move_tail	list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
listhead	list.h	/^	struct list_head listhead;$/;"	m	struct:blist	typeref:struct:blist::list_head
lock	hash.h	/^    pthread_mutex_t  lock;$/;"	m	struct:bucket
loop	add.s	/^loop:   addi r1,r1,1$/;"	l
main	masm.c	/^int main(int argc,char ** argv)$/;"	f
masm_main_loop	masm.c	/^static int masm_main_loop(char * obj_file,char * src_file)$/;"	f	file:
name	list.h	/^    char * name;$/;"	m	struct:__anon1
next	list.h	/^	struct list_head* next; $/;"	m	struct:list_head	typeref:struct:list_head::list_head
next_prime	hash.c	/^static int next_prime(int x)$/;"	f	file:
num_buckets	hash.h	/^        int num_buckets;$/;"	m	struct:hash_table
opcodes	masm.c	/^char * opcodes[32] = {$/;"	v
prev	list.h	/^	struct list_head* prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
real_line	list.h	/^    int    real_line;$/;"	m	struct:__anon1
reg_name	masm.c	/^char * reg_name[32] = {$/;"	v
skip_label_wthie	masm.c	/^static inline char * skip_label_wthie(const char * p)$/;"	f	file:
skip_op_name	masm.c	/^static inline char * skip_op_name(const char * p)$/;"	f	file:
skip_reg_wthie	masm.c	/^static inline char * skip_reg_wthie(const char * p)$/;"	f	file:
skip_wthie	masm.c	/^static inline char * skip_wthie(const char * p)$/;"	f	file:
str2hash	masm.c	/^uint32_t str2hash(char *str) $/;"	f
sum	add.s	/^sum  :    xor        r1,r1,r1$/;"	l
usage	masm.c	/^void usage()$/;"	f
verify_opcode	masm.c	/^static int verify_opcode(char * opcode)$/;"	f	file:
