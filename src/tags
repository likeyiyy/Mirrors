!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADD	cpucore.h	11;"	d
ADDI	cpucore.h	12;"	d
AND	cpucore.h	18;"	d
ANDI	cpucore.h	22;"	d
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -std=gnu99 -g$/;"	m
CPUID	cpucore.h	/^    uint32_t  CPUID;$/;"	m	struct:_cpu
DISPLAY_H	display.h	9;"	d
DIV	cpucore.h	15;"	d
EQUAL	cpucore.h	39;"	d
EXECS	Makefile	/^EXECS = mirriros$/;"	m
EXIT_IF_ADDR_BIGGER	memory.c	32;"	d	file:
GREAT	cpucore.h	32;"	d
GREATE	cpucore.h	33;"	d
GREATEU	cpucore.h	37;"	d
GREATU	cpucore.h	36;"	d
HALT	cpucore.h	47;"	d
JMP	cpucore.h	41;"	d
LDFLAGS	Makefile	/^LDFLAGS = -lpthread -lncurses$/;"	m
LESS	cpucore.h	31;"	d
LESSE	cpucore.h	34;"	d
LESSEU	cpucore.h	38;"	d
LESSU	cpucore.h	35;"	d
LUI	cpucore.h	46;"	d
LWORD	cpucore.h	44;"	d
L_MEMORY_H	memory.h	9;"	d
MB_SIZE	memory.h	11;"	d
MEMORY_CONSOLE_HIGH	display.c	17;"	d	file:
MEMORY_CONSOLE_STARTX	display.c	19;"	d	file:
MEMORY_CONSOLE_STARTY	display.c	20;"	d	file:
MEMORY_CONSOLE_WIDTH	display.c	18;"	d	file:
MOD	cpucore.h	16;"	d
MOV	cpucore.h	43;"	d
MUL	cpucore.h	14;"	d
NOT	cpucore.h	20;"	d
OBJS	Makefile	/^OBJS = memory.o cpucore.o display.o $/;"	m
OR	cpucore.h	19;"	d
ORI	cpucore.h	23;"	d
PC	cpucore.h	/^    uint32_t  PC;$/;"	m	struct:_cpu
PWD	cpucore.h	/^    uint32_t  PWD;$/;"	m	struct:_cpu
PWD_DIVZERO	cpucore.h	53;"	d
PWD_INVINST	cpucore.h	55;"	d
PWD_MODZERO	cpucore.h	54;"	d
RD	cpucore.h	50;"	d
REG_CONSOLE_HIGH	display.c	22;"	d	file:
REG_CONSOLE_STARTX	display.c	24;"	d	file:
REG_CONSOLE_STARTY	display.c	25;"	d	file:
REG_CONSOLE_WIDTH	display.c	23;"	d	file:
RS	cpucore.h	51;"	d
RT	cpucore.h	52;"	d
SAL	cpucore.h	28;"	d
SAR	cpucore.h	29;"	d
SLL	cpucore.h	26;"	d
SLR	cpucore.h	27;"	d
SUB	cpucore.h	13;"	d
SWORD	cpucore.h	45;"	d
UEQUAL	cpucore.h	40;"	d
USER_CONSOLE_HIGH	display.c	12;"	d	file:
USER_CONSOLE_STARTX	display.c	14;"	d	file:
USER_CONSOLE_STARTY	display.c	15;"	d	file:
USER_CONSOLE_WIDTH	display.c	13;"	d	file:
WORKER_SET_SIZE	display.c	10;"	d	file:
XOR	cpucore.h	21;"	d
XORI	cpucore.h	24;"	d
_CPUCORE_H	cpucore.h	9;"	d
_INCLUDES_H	includes.h	9;"	d
_cpu	cpucore.h	/^typedef struct _cpu$/;"	s
_memory	memory.h	/^typedef struct _memory$/;"	s
cpu_main_loop	cpucore.c	/^void * cpu_main_loop(void * arg)$/;"	f
cpu_t	cpucore.h	/^}cpu_t;$/;"	t	typeref:struct:_cpu
exectued	cpucore.c	/^static void exectued(cpu_t * cpu, uint32_t in)$/;"	f	file:
exit_if_ptr_is_null	memory.c	/^void exit_if_ptr_is_null(void * ptr,const char * message) $/;"	f
getfetch	cpucore.c	/^static uint32_t getfetch(cpu_t * cpu)$/;"	f	file:
height	display.c	/^    int height;$/;"	m	struct:__anon1	file:
init_cpu	cpucore.c	/^cpu_t * init_cpu(uint32_t cpuid,uint32_t pc,memory_t * memory)$/;"	f
init_memory	memory.c	/^memory_t * init_memory(uint32_t size)$/;"	f
main	mirriros.c	/^int main(int argc,char ** argv)$/;"	f
memory	cpucore.h	/^    memory_t  * memory;$/;"	m	struct:_cpu
memory	memory.h	/^    uint8_t * memory;$/;"	m	struct:_memory
memory_t	memory.h	/^}memory_t;$/;"	t	typeref:struct:_memory
print_cpu	cpucore.c	/^void print_cpu(cpu_t * cpu)$/;"	f
read_memory_16	memory.c	/^uint16_t read_memory_16(memory_t * m, uint32_t addr)$/;"	f
read_memory_32	memory.c	/^uint32_t read_memory_32(memory_t * m, uint32_t addr)$/;"	f
read_memory_8	memory.c	/^uint8_t read_memory_8(memory_t * m, uint32_t addr)$/;"	f
reg	cpucore.h	/^    uint32_t  reg[32];$/;"	m	struct:_cpu
screen_init	display.c	/^static void screen_init()$/;"	f	file:
signedimm	cpucore.c	/^static inline int32_t signedimm(uint32_t instruction)$/;"	f	file:
size	memory.h	/^    uint32_t size;$/;"	m	struct:_memory
startx	display.c	/^    int startx;$/;"	m	struct:__anon1	file:
starty	display.c	/^    int starty;$/;"	m	struct:__anon1	file:
sys_display	display.c	/^void sys_display(cpu_t * cpu)$/;"	f
width	display.c	/^    int width;$/;"	m	struct:__anon1	file:
win	display.c	/^    WINDOW * win;$/;"	m	struct:__anon1	file:
window	display.c	/^static window_t window[WORKER_SET_SIZE];$/;"	v	file:
window_t	display.c	/^}window_t;$/;"	t	typeref:struct:__anon1	file:
write_memory_16	memory.c	/^void write_memory_16(memory_t * m, uint32_t addr,uint16_t  value)$/;"	f
write_memory_32	memory.c	/^void write_memory_32(memory_t * m, uint32_t addr,uint32_t  value)$/;"	f
write_memory_8	memory.c	/^void write_memory_8(memory_t * m, uint32_t addr,uint8_t  value)$/;"	f
zeroeximm	cpucore.c	/^static inline uint32_t zeroeximm(uint32_t instruction)$/;"	f	file:
